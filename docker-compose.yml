version: '3.5'
services:

  # Для тестовых целей (на основе встроенного в php сервера)
#  php:
#    container_name: corp-integrations-php
#    build: docker/php-v1
#    ports:
#      - "8002:8000"
#    volumes:
#      - ./src:/var/www/html
#      - ./logs/php:/var/log/php
#    environment:
#      XDEBUG_MODE: debug
#      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"  # Для Linux/WSL
#    depends_on:
#      - redis
#    networks:
#      - app_network

  php:
    container_name: corp-integrations-php
    build: docker/php-v2
#    ports:
#      - "8002:8000"
    volumes:
      - ./src:/var/www/html
      - ./logs/php:/var/log/php
    environment:
      PHP_FPM_LISTEN: 9000
      XDEBUG_MODE: debug
      XDEBUG_START_WITH_REQUEST: yes
      XDEBUG_CONFIG: "start_with_request=yes client_host=host.docker.internal client_port=9003 idekey=PHPSTORM"
      XDEBUG_DISCOVER_CLIENT_HOST: 0
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Для Linux/WSL
    depends_on:
      - redis
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: corp-integrations-nginx
    restart: unless-stopped
    ports:
      - "8002:80"
      # - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
    networks:
      - app_network

  composer:
    image: composer:latest
    container_name: corp-integrations-composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    command: sh -c "composer install && tail -f /dev/null"
    tty: true

  redis:
    image: redis:alpine
    container_name: corp-integrations-redis
    ports:
      # - "6379:6379"
      - "6380:${REDIS_PORT}"
    volumes:
      - ./volumes/redis:/data
    restart: always
    networks:
      - app_network
    # environment:
      # - REDIS_PORT=${REDIS_PORT}
    command: redis-server --appendonly yes

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      # - "8081:8081"
      - "8085:8081" # http://localhost:8085
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - app_network

  redis-insight:
    image: redislabs/redisinsight:2.70
    container_name: corp-integrations-redis-insight
    ports:
      - "8050:8001" # http://localhost:8050
    volumes:
      - ./volumes/redis-insight:/db
    restart: always
    depends_on:
      - redis
    networks:
      - app_network
    # environment:
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      # - RITRUSTEDORIGINS=http://localhost:8050,http://127.0.0.1:8050
      # - REDIS_HOST=${REDIS_HOST}
      # - REDIS_PORT=${REDIS_PORT}

  mysql:
    container_name: corp-integrations-mysql
    image: mysql:8.0.19
    ports:
      # - "3306:3306"
      - "3316:${MYSQL_PORT}"
    volumes:
      - ./volumes/mysql8:/var/lib/mysql
    networks:
      - app_network
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  phpmyadmin:
    container_name: corp-integrations-phpmyadmin
    image: phpmyadmin/phpmyadmin # https://hub.docker.com/_/phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=${MYSQL_PORT}
      - PMA_ARBITRARY=0
    ports:
      # - "8091:80"
      - "8102:80" # http://localhost:8102/
    networks:
      - app_network
    depends_on:
      - mysql
    restart: unless-stopped

  vault:
    image: vault:1.13.3
    container_name: corp-integrations-vault
    environment:
      # устанавливает идентификатор изначально сгенерированного корневого токена на заданное значение
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
      # устанавливает IP:порт прослушивателя сервера разработки (по умолчанию 0.0.0.0:8200)
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    ports:
      - "8200:8200" # http://localhost:8200
    volumes:
      - ./volumes/vault:/vault/file
    cap_add:
      - IPC_LOCK
    restart: unless-stopped

networks:
  app_network:
    driver: bridge
